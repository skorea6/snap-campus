{{>layout/header}}
<style>
    .carousel-item {
        position: relative;
        background-color: #f0f0f0; /* 회색 배경 */
        text-align: center;
        height: 600px;
        overflow: hidden;
    }
    .carousel-item img {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        min-height: 100%;
        min-width: 100%;
        max-height: 100%;
        max-width: 100%;
        object-fit: contain; /* 이미지가 컨테이너에 맞게 조정되지만 잘리지 않음 */
    }
    .info-section {
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        position: relative; /* 상대 위치 설정 */
    }
    .carousel-container {
        border: 1px solid #ddd;
        border-radius: 5px;
        position: relative;
    }
    .carousel-control-prev, .carousel-control-next {
        background-color: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        width: 40px;
        height: 40px;
        top: 50%;
        transform: translateY(-50%);
    }
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-size: 100%, 100%;
    }

    .info-title {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        color: black;
        max-width: 100%; /* 또는 부모 컨테이너의 너비에 따라 조정 */
    }

    .info-description {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        color: grey;
        max-height: 3em; /* 이 값을 폰트 크기와 라인 높이에 따라 조정 */
    }

    .info-event-info {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        max-width: 100%; /* 또는 부모 컨테이너의 너비에 따라 조정 */
    }

    .comment-section {
        position: absolute; /* 절대 위치 설정 */
        bottom: 0; /* 하단에 위치 */
        left: 0; /* 왼쪽 정렬 */
        right: 0; /* 오른쪽 정렬 */
        background-color: white; /* 배경색 설정 */
        padding: 10px 20px; /* 패딩 조정 */
        border-top: 1px solid #ddd; /* 상단 테두리 */
    }

    .comment-section .bi-heart {
        font-size: 1.5rem;
        cursor: pointer;
    }
    .comment-section .bi-heart-fill {
        font-size: 1.5rem;
        cursor: pointer;
    }
    .comment-section span {
        font-size: 0.875rem;
        color: #888;
    }
    .comment-section textarea {
        resize: none;
    }
    .comment {
        position: relative;
        margin-bottom: 5px;
    }
    .comment .options {
        position: absolute;
        top: 0;
        right: 0;
    }
    .comment .options .bi-three-dots-vertical {
        font-size: 1rem;
        cursor: pointer;
    }
    .comment .dropdown-menu {
        top: 20px;
        right: 0;
        left: auto;
    }

    .info-section .comment-list {
        height: 300px;
        overflow-y: auto; /* 세로 스크롤 바 활성화 */
    }

    @media (max-width: 768px) {
        .carousel-item {
            height: 300px; /* 992px 이하에서 이미지 최대 높이 */
        }
        .info-section {
            height: 450px; /* 768px 이하에서 info-section의 높이 유지 */
        }

        .info-section .comment-list {
            height: 150px;
            overflow-y: auto; /* 세로 스크롤 바 활성화 */
        }
    }
</style>
<div class="flex-fill">
    <section class="section">
        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="carousel-container">
                        <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner">
                                {{#post.images}}
                                <div class="carousel-item {{#isActive}}active{{/isActive}}">
                                    <img src="https://image.snapcampus.abz.kr/{{path}}" class="d-block" alt="...">
                                </div>
                                {{/post.images}}
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 info-section">
                    <h5 class="info-title">{{#post}}{{title}}{{/post}}</h5>
                    <p class="info-description">
                        {{#post}}{{description}}{{/post}}
                    </p>
                    <p class="info-event-info">장소: {{#post.event.map}}<a href="/place/{{id}}" style="color: #4ca0e6;">{{placeName}}</a>{{/post.event.map}}({{#post.event}}{{name}}{{/post.event}}) / 작성자: {{#post.member}}{{nick}}{{/post.member}}</p>
                    <hr>
                    <div class="comment-list">
                        <div style="margin-bottom: 10px;">
                            <strong><댓글 {{#comments}}{{totalElements}}{{/comments}}개></strong>
                        </div>
                        {{#comments.content}}
                        <div class="comment" data-id="{{id}}">
                            <div class="d-flex align-items-start">
                                <div style="margin-right: 5px;"><strong>{{#member}}{{nick}}{{/member}}:</strong></div>
                                <div class="comment-content" style="white-space: pre-line;max-width: calc(100% - 170px);">{{content}}</div>
                            </div>

                            <div class="options">
                                {{createdAtShort}}
                                <i class="bi bi-three-dots-vertical" data-bs-toggle="dropdown"></i>
                                <ul class="dropdown-menu">
                                    <li style="margin: 0"><a class="dropdown-item" href="#" onclick="openCommentUpdateModal({{id}}, '{{#member}}{{userId}}{{/member}}')">수정</a></li>
                                    <li style="margin: 0"><a class="dropdown-item" href="#" onclick="commentDelete({{id}}, '{{#member}}{{userId}}{{/member}}')">삭제</a></li>
                                </ul>
                            </div>
                        </div>
                        {{/comments.content}}
                    </div>
                    <div class="comment-section">
                        <div class="d-flex justify-content-between align-items-center">
                            <span style="color:black;">
                                <i id="likeButton" class="bi {{#post}}{{#likeStatus}}bi-heart-fill text-danger{{/likeStatus}}{{^likeStatus}}bi-heart{{/likeStatus}}{{/post}}"></i>
                                <span id="likeCount" style="font-size: 1.2rem;color:black;">좋아요 {{#post}}{{likeCount}}{{/post}}개</span>
                            </span>
                            <span>{{#post}}{{createdAt}}{{/post}}</span>
                        </div>
                        <div class="d-flex mt-2">
                            <textarea id="commentAddContent" class="form-control me-3" rows="1" placeholder="댓글 달기..." style="margin-bottom: 0"></textarea>
                            <button id="commentAddButton" class="btn btn-primary">댓글쓰기</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-end" style="margin-top: 20px;">
                <button class="btn btn-warning me-2" onclick="openPostUpdateModal()">사진 수정</button>
                <button class="btn btn-danger" onclick="postDelete()">사진 삭제</button>
            </div>
        </div>
    </section>
</div>
<div class="modal fade" id="postUpdateModal" tabindex="-1" aria-labelledby="postUpdateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="postUpdateModalLabel">사진 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">사진 제목</label>
                    <input type="text" class="form-control" id="postTitle" value="{{#post}}{{title}}{{/post}}">
                </div>
                <div class="mb-3">
                    <label class="form-label">사진 설명</label>
                    <input type="text" class="form-control" id="postDescription" value="{{#post}}{{description}}{{/post}}">
                </div>
                <div class="mb-3">
                    <label class="form-label">과 이름 (선택)</label>
                    <input type="text" class="form-control" id="postDepartment" value="{{#post}}{{#department}}{{department}}{{/department}}{{/post}}">
                </div>
                <div class="mb-3">
                    <label class="form-label">사진 업로드 (여러개 가능) - 수정시에만 업로드!</label>
                    <input type="file" class="form-control-file" id="postImages" multiple accept="image/*" onchange="postPreviewImages()">
                </div>
                <div id="postImagePreviewContainer" class="row"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
                <button type="button" class="btn btn-primary" id="updatePostButton">사진 수정하기</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="commentUpdateModal" tabindex="-1" aria-labelledby="commentUpdateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="commentUpdateModalLabel">댓글 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">댓글 내용</label>
                    <textarea id="commentUpdateContent" class="form-control me-3" rows="4" placeholder="댓글 수정..." style="margin-bottom: 0"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
                <button type="button" class="btn btn-primary" id="updateCommentButton">댓글 수정하기</button>
            </div>
        </div>
    </div>
</div>
<script>
    let isLogined = false;
    let userId = null;

    {{#auth}}
    isLogined = true;
    userId = "{{username}}";
    {{/auth}}

    let postId = {{#post}}{{id}}{{/post}};
    let postUserId = "{{#post.member}}{{userId}}{{/post.member}}";

    let nowCommentId = null;

    function openPostUpdateModal(){
        if(isLogined === true) {
            if(userId !== postUserId){
                alert('본인의 사진만 수정할 수 있습니다.');
            }else{
                $('#postUpdateModal').modal('show');
            }
        } else {
            alert('로그인 후 이용 가능합니다.');
        }
    }

    function openCommentUpdateModal(commentId, commentUserId){
        if(isLogined === true) {
            if(userId !== commentUserId){
                alert('본인의 댓글만 수정할 수 있습니다.');
            }else{
                nowCommentId = commentId;
                let content = $('.comment[data-id=' + commentId + '] .comment-content').text();
                $('#commentUpdateContent').val(content);
                $('#commentUpdateModal').modal('show');
            }
        } else {
            alert('로그인 후 이용 가능합니다.');
        }
    }

    function postDelete(){
        if(isLogined === true) {
            if(userId !== postUserId){
                alert('본인의 사진만 삭제할 수 있습니다.');
            }else{
                var userResponse = confirm("진심으로 삭제하시겠습니까?");
                if (userResponse) {
                    var postData = {
                        id: postId
                    };

                    $.ajax({
                        url: '/api/post/delete',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(postData),
                        success: function (response) {
                            alert(response.statusMessage);
                            location.href = '/';
                        },
                        error: function (xhr, status, error) {
                            const errorResponse = JSON.parse(xhr.responseText);
                            alert(errorResponse.statusMessage);
                        }
                    });
                }
            }
        } else {
            alert('로그인 후 이용 가능합니다.');
        }
    }

    function commentDelete(commentId, commentUserId){
        if(isLogined === true) {
            if(userId !== commentUserId){
                alert('본인의 댓글만 삭제할 수 있습니다.');
            }else{
                var userResponse = confirm("진심으로 삭제하시겠습니까?");
                if (userResponse) {
                    var postData = {
                        id: commentId
                    };

                    $.ajax({
                        url: '/api/comment/delete',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(postData),
                        success: function (response) {
                            alert(response.statusMessage);
                            location.reload();
                        },
                        error: function (xhr, status, error) {
                            const errorResponse = JSON.parse(xhr.responseText);
                            alert(errorResponse.statusMessage);
                        }
                    });
                }
            }
        } else {
            alert('로그인 후 이용 가능합니다.');
        }
    }

    function postPreviewImages() {
        var files = document.querySelector('input[id="postImages"]').files;
        var previewContainer = document.getElementById('postImagePreviewContainer');
        previewContainer.innerHTML = '';  // 미리보기 컨테이너를 초기화

        // 선택된 모든 파일에 대해 루프
        Array.from(files).forEach(file => {
            var reader = new FileReader();

            reader.onload = function(e) {
                var imgElement = document.createElement('img');
                imgElement.src = e.target.result;
                imgElement.style.width = '100px';  // 이미지 크기 설정
                imgElement.style.height = '100px';
                imgElement.style.margin = '5px';  // 이미지 간격 설정
                imgElement.className = 'img-thumbnail';  // Bootstrap 클래스 추가

                previewContainer.appendChild(imgElement);
            };

            reader.readAsDataURL(file);  // 이미지 파일을 Data URL로 읽기
        });
    }

    $(document).ready(function() {
        $('#updatePostButton').click(function() {
            var formData = new FormData();
            formData.append('id', postId);
            formData.append('title', $('input[id="postTitle"]').val());
            formData.append('description', $('input[id="postDescription"]').val());
            if($('input[id="postDepartment"]').val() !== ""){
                formData.append('department', $('input[id="postDepartment"]').val());
            }

            var files = document.querySelector('input[id="postImages"]').files;
            for (var i = 0; i < files.length; i++) {
                formData.append('images', files[i]);
            }

            $.ajax({
                url: '/api/post/update',
                type: 'POST',
                processData: false,  // 파일 전송을 위해 필수
                contentType: false,  // 파일 전송을 위해 필수
                data: formData,
                success: function(response) {
                    alert(response.statusMessage);
                    location.reload();
                },
                error: function(xhr, status, error) {
                    const errorResponse = JSON.parse(xhr.responseText);
                    alert(errorResponse.statusMessage);
                }
            });
        });

        $('#likeButton').click(function() {
            if(isLogined === true) {
                var postData = {
                    postId: postId
                };

                $.ajax({
                    url: '/api/post/like/update',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(postData),
                    success: function (response) {
                        $('#likeCount').html("좋아요 " + response.data.likeCount + "개");
                        if (response.data.status === true) {
                            $('#likeButton').attr('class', 'bi bi-heart-fill text-danger');
                        } else {
                            $('#likeButton').attr('class', 'bi bi-heart');
                        }
                    },
                    error: function (xhr, status, error) {
                        const errorResponse = JSON.parse(xhr.responseText);
                        alert(errorResponse.statusMessage);
                    }
                });
            }else{
                alert('로그인 후 이용 가능합니다.');
            }
        });

        $('#commentAddButton').click(function() {
            if(isLogined === true) {
                if($('#commentAddContent').val() === ""){
                    alert('댓글 내용을 입력해주세요');
                }else {
                    var postData = {
                        postId: postId,
                        content: $('#commentAddContent').val()
                    };

                    $.ajax({
                        url: '/api/comment/add',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(postData),
                        success: function (response) {
                            alert(response.statusMessage);
                            location.reload();
                        },
                        error: function (xhr, status, error) {
                            const errorResponse = JSON.parse(xhr.responseText);
                            alert(errorResponse.statusMessage);
                        }
                    });
                }
            }else{
                alert('로그인 후 이용 가능합니다.');
            }
        });

        $('#updateCommentButton').click(function() {
            if($('#commentUpdateContent').val() === ""){
                alert('댓글 내용을 입력해주세요');
            }else {
                var postData = {
                    id: nowCommentId,
                    content: $('#commentUpdateContent').val()
                };

                $.ajax({
                    url: '/api/comment/update',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(postData),
                    success: function (response) {
                        alert(response.statusMessage);
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        const errorResponse = JSON.parse(xhr.responseText);
                        alert(errorResponse.statusMessage);
                    }
                });
            }
        });
    });
</script>
{{>layout/footer}}